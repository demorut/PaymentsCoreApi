// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentsCoreApi.Data.Contexts;

#nullable disable

namespace PaymentsCoreApi.Data.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230704201249_initial-migration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PaymentsCoreApi.Domain.Entities.Account", b =>
                {
                    b.Property<string>("AccountNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("account_number");

                    b.Property<string>("AccountName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("account_name");

                    b.Property<bool>("AccountStatus")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("account_status");

                    b.Property<string>("AccountType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("account_type");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("approved");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approved_by");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("approved_date");

                    b.Property<double>("Balance")
                        .HasColumnType("double")
                        .HasColumnName("balance");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("currency_code");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("customer_id");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_date");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("record_date");

                    b.Property<long>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("record_id");

                    b.HasKey("AccountNumber");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("PaymentsCoreApi.Domain.Entities.AgentSignUpRequest", b =>
                {
                    b.Property<long>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("record_id");

                    b.Property<string>("AgentId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("agent_id");

                    b.Property<string>("AgentName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("agent_name");

                    b.Property<string>("AgentStatus")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("agent_status");

                    b.Property<string>("AgentType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("agent_type");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("approved");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approved_by");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("approved_date");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("city");

                    b.Property<string>("Comment")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("comment");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("contact_name");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("country_code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by");

                    b.Property<string>("Documents")
                        .HasColumnType("longtext")
                        .HasColumnName("documents");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("id_number");

                    b.Property<string>("IdType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("id_type");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_date");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("phone_number");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("record_date");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("street");

                    b.HasKey("RecordId");

                    b.ToTable("agents_signup_requests");
                });

            modelBuilder.Entity("PaymentsCoreApi.Domain.Entities.Channel", b =>
                {
                    b.Property<long>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("record_id");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("approved");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approved_by");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("approved_date");

                    b.Property<string>("ChannelKey")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("channel_key");

                    b.Property<string>("ChannelSecretKey")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("channel_secretKey");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_date");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("record_date");

                    b.HasKey("RecordId");

                    b.ToTable("channels");
                });

            modelBuilder.Entity("PaymentsCoreApi.Domain.Entities.Country", b =>
                {
                    b.Property<string>("CountryCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("country_code");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("approved");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approved_by");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("approved_date");

                    b.Property<string>("CountryName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("country_name");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by");

                    b.Property<string>("Currency")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("currency");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("currency_code");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_date");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("record_date");

                    b.Property<long>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("record_id");

                    b.HasKey("CountryCode");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("PaymentsCoreApi.Domain.Entities.Customers", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("customer_id");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("approved");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approved_by");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("approved_date");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("country_code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("CustomerStatus")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("customer_status");

                    b.Property<string>("CustomerType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("customer_type");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_date");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("phone_number");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("record_date");

                    b.Property<long>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("record_id");

                    b.Property<string>("UserId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_id");

                    b.HasKey("CustomerId");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("PaymentsCoreApi.Domain.Entities.GeneralLedger", b =>
                {
                    b.Property<long>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("record_id");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("account_number");

                    b.Property<double>("Balance")
                        .HasColumnType("double")
                        .HasColumnName("balance");

                    b.Property<string>("Channel")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("channel");

                    b.Property<double>("CreditAmount")
                        .HasColumnType("double")
                        .HasColumnName("credit_amount");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("customer_id");

                    b.Property<double>("DebitAmount")
                        .HasColumnType("double")
                        .HasColumnName("debit_amount");

                    b.Property<string>("Naration")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("naration");

                    b.Property<string>("PartnerId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("partner_id");

                    b.Property<string>("SystemId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("system_id");

                    b.Property<string>("TransactionCategory")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("transaction_category");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("transaction_date");

                    b.Property<string>("TransactionHeaderId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("transaction_header_id");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("transaction_type");

                    b.HasKey("RecordId");

                    b.ToTable("general_ledger");
                });

            modelBuilder.Entity("PaymentsCoreApi.Domain.Entities.PasswordResetRequests", b =>
                {
                    b.Property<long>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("record_id");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("approved");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approved_by");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("approved_date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_date");

                    b.Property<string>("Otp")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("otp");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("record_date");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("status");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("username");

                    b.HasKey("RecordId");

                    b.ToTable("password_reset_requests");
                });

            modelBuilder.Entity("PaymentsCoreApi.Domain.Entities.SignUpRequest", b =>
                {
                    b.Property<long>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("record_id");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("approved");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approved_by");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("approved_date");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("country_code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by");

                    b.Property<string>("CustomerType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("customer_type");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_date");

                    b.Property<string>("Otp")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("otp");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("phone_number");

                    b.Property<string>("RandomCode")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("rand_code");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("record_date");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("status");

                    b.HasKey("RecordId");

                    b.ToTable("signup_requests");
                });

            modelBuilder.Entity("PaymentsCoreApi.Domain.Entities.TransactionHeader", b =>
                {
                    b.Property<long>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("record_id");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("approved");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approved_by");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("approved_date");

                    b.Property<string>("Channel")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("channel");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by");

                    b.Property<string>("FromAccount")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("from_account");

                    b.Property<string>("FromCustomerId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("from_customer_id");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_date");

                    b.Property<string>("Partner")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("partner");

                    b.Property<string>("PartnerId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("partner_id");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("product_type");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("record_date");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("ToAccount")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("to_account");

                    b.Property<string>("ToCustomerId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("to_customer_id");

                    b.Property<double>("TransactionAmount")
                        .HasColumnType("double")
                        .HasColumnName("transaction_amount");

                    b.Property<string>("TransactionHeaderId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("transaction_header_id");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("transaction_type");

                    b.Property<string>("ledger_id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ledger_id");

                    b.HasKey("RecordId");

                    b.ToTable("transaction_header");
                });

            modelBuilder.Entity("PaymentsCoreApi.Domain.Entities.UserLogins", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Username");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("approved");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approved_by");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("approved_date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_login_date");

                    b.Property<DateTime>("LastPasswordChangeDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_password_change_date");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_date");

                    b.Property<int>("LoginAttempts")
                        .HasColumnType("int")
                        .HasColumnName("login_attempts");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("password");

                    b.Property<string>("RandomCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("rand_code");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("record_date");

                    b.Property<long>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("record_id");

                    b.Property<bool>("Reset")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("reset");

                    b.Property<bool>("ResetPassword")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("reset_password");

                    b.HasKey("Username");

                    b.ToTable("user_logins");
                });
#pragma warning restore 612, 618
        }
    }
}
